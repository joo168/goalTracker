{"version":3,"sources":["imgs/1.jpg","lib/styles/palette.js","components/calendar/CalendarViewer.js","modules/calendar.js","modules/add.js","containers/calendar/CalendarContainer.js","components/common/Header.js","modules/user.js","containers/common/HeaderContainer.js","components/common/SubHeader.js","containers/calendar/CalendarHeaderContainer.js","components/calendar/Today.js","containers/calendar/TodayContainer.js","components/add/AddList.js","containers/add/AddListContainer.js","pages/CalendarPage.js","components/common/Button.js","components/common/Input.js","components/add/AddViewer.js","containers/add/AddViewerContainer.js","pages/AddPage.js","components/start/StartViewer.js","containers/start/StartContainer.js","pages/StartPage.js","App.js","serviceWorker.js","modules/index.js","index.js"],"names":["module","exports","palette","green","CalendarViewer","setSelectedDay","selectedDay","calendar","results","toggle","i","push","date","clone","startOf","add","onClick","e","id","done","target","CalendarViewerBlock","className","subtract","format","map","c","key","cursor","style","fontSize","styled","div","createAction","day","initialState","moment","handleActions","state","action","payload","changeColor","color","changeItem","list","remove","setResults","name","checked","result","concat","filter","item","connect","Header","username","HeaderBlock","to","UserInfo","setUser","user","currentUser","localStorage","getItem","JSON","parse","loadUser","SubHeaderBlock","SubHeader","type","Today","TodayBlock","rows","cols","TodayContainer","AddList","lists","AddListBlock","CalendarPage","StyledButton","button","props","wider","css","Button","StyledInput","input","Input","AddViewer","background","AddViewerBlock","spellCheck","onSubmit","preventDefault","value","onChange","placeholder","AddPage","StartViewer","StartViewerBlock","alert","stringify","setItem","saveUser","window","location","img","StartPage","App","component","path","exact","Boolean","hostname","match","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc70de72.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.505e9103.jpg\";","const palette = {\r\n  green: [\r\n    '#e6fcf5',\r\n    '#c3fae8',\r\n    '#96f2d7',\r\n    '#63e6be',\r\n    '#38d9a9',\r\n    '#20c997',\r\n    '#12b886',\r\n    '#0ca678',\r\n    '#099268',\r\n    '#087f5b',\r\n  ],\r\n};\r\n\r\nexport default palette;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { MdChevronLeft, MdChevronRight } from 'react-icons/md';\r\nimport palette from '../../lib/styles/palette';\r\n\r\nconst CalendarViewer = ({ setSelectedDay, selectedDay, results, toggle }) => {\r\n  const onClickLeft = () => {\r\n    setSelectedDay(selectedDay.clone().subtract(7, 'day'));\r\n  };\r\n  const onClickRight = () => {\r\n    setSelectedDay(selectedDay.clone().add(7, 'day'));\r\n  };\r\n\r\n  const calendar = [];\r\n\r\n  for (let i = 0; i < 7; i++) {\r\n    calendar.push({\r\n      i: i,\r\n      date: selectedDay.clone().startOf('week').add(i, 'day'),\r\n    });\r\n  }\r\n\r\n  const onClick = (e, id, done) => {\r\n    e.target.id = 'red';\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CalendarViewerBlock>\r\n        <div className=\"subheader\">\r\n          <button className=\"week-left\" onClick={onClickLeft}>\r\n            <MdChevronLeft />\r\n          </button>\r\n          <span className=\"title\">{selectedDay.format('MMMM D')}</span>\r\n          <button className=\"week-right\" onClick={onClickRight}>\r\n            <MdChevronRight />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"box2\">\r\n            <span className=\"text SUN\">SUN</span>\r\n          </div>\r\n          <div className=\"box2\">\r\n            <span className=\"text MON\">MON</span>\r\n          </div>\r\n          <div className=\"box2\">\r\n            <span className=\"text TUE\">TUE</span>\r\n          </div>\r\n          <div className=\"box2\">\r\n            <span className=\"text WED\">WED</span>\r\n          </div>\r\n          <div className=\"box2\">\r\n            <span className=\"text THU\">THU</span>\r\n          </div>\r\n          <div className=\"box2\">\r\n            <span className=\"text FRI\">FRI</span>\r\n          </div>\r\n          <div className=\"box2\">\r\n            <span className=\"text SAT\">SAT</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          {calendar.map((c) => (\r\n            <div\r\n              className=\"box\"\r\n              id={\r\n                c.date.format('YYYYMMDD') === selectedDay.format('YYYYMMDD')\r\n                  ? 'selected'\r\n                  : ''\r\n              }\r\n              key={c.i}\r\n            >\r\n              <span\r\n                className=\"text\"\r\n                onClick={() => setSelectedDay(c.date)}\r\n                id={c.date}\r\n              >\r\n                {c.date.format('D')}\r\n              </span>\r\n              <div\r\n                cursor=\"pointer\"\r\n                onClick={onClick}\r\n                id={c.date}\r\n                style={{ fontSize: '26px' }}\r\n              ></div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </CalendarViewerBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CalendarViewer;\r\n\r\nconst CalendarViewerBlock = styled.div`\r\n  background-color: #e9ecef;\r\n  padding: 20px;\r\n  margin: 0rem 2.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-content: center;\r\n  .subheader {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: 10px;\r\n    .title {\r\n      margin: 0 10px;\r\n      font-weight: 500;\r\n    }\r\n    button {\r\n      background-color: white;\r\n      cursor: pointer;\r\n      outline: none;\r\n      border: none;\r\n      font-size: 15px;\r\n      border-radius: 20px;\r\n      padding: 4px 9px;\r\n      margin: 0 3px;\r\n      display: inline-flex;\r\n    }\r\n  }\r\n\r\n  .row {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    .box2 {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      width: calc(90% / 7);\r\n      font-size: 0.8rem;\r\n      &:first-child > .text {\r\n        color: red;\r\n      }\r\n      &:last-child > .text {\r\n        color: #588dff;\r\n      }\r\n      .text {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: 2rem;\r\n        height: 2rem;\r\n        border-radius: 100%;\r\n        font-weight: 500;\r\n      }\r\n    }\r\n    #selected {\r\n      .text {\r\n        background-color: ${palette.green[5]};\r\n        color: white;\r\n      }\r\n    }\r\n    .box {\r\n      #red {\r\n        color: #fa5252;\r\n      }\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      width: calc(90% / 7);\r\n      font-size: 1rem;\r\n      &:first-child > .text {\r\n        color: red;\r\n      }\r\n      &:last-child > .text {\r\n        color: #588dff;\r\n      }\r\n\r\n      .text {\r\n        font-weight: 490;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: 2rem;\r\n        height: 2rem;\r\n        border-radius: 100%;\r\n        cursor: pointer;\r\n        /* color: gray; */\r\n        &:hover {\r\n          background-color: rgba(${palette.green[5]}, 0.1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport moment from 'moment';\r\n\r\nconst SET_SELECTED_DAY = 'calendar/SET_SELECTED_DAY';\r\n\r\nexport const setSelectedDay = createAction(SET_SELECTED_DAY, day => day);\r\n\r\nconst initialState = {\r\n  selectedDay: moment(),\r\n};\r\n\r\nconst calendar = handleActions(\r\n  {\r\n    [SET_SELECTED_DAY]: (state, action) => ({\r\n      ...state,\r\n      selectedDay: action.payload,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default calendar;\r\n","import { createAction, handleActions } from 'redux-actions';\r\n\r\nconst CHANGE_COLOR = 'add/CHANGE_COLOR';\r\nconst CHANGE_ITEM = 'add/CHANGE_ITEM';\r\nconst SET_RESULTS = 'add/SET_RESULTS';\r\nconst TOGGLE = 'add/TOGGLE';\r\nconst REMOVE = 'add/REMOVE';\r\n\r\nexport const changeColor = createAction(CHANGE_COLOR, (color) => color);\r\nexport const changeItem = createAction(CHANGE_ITEM, (list) => list);\r\nexport const toggle = createAction(TOGGLE, (id) => id);\r\nexport const remove = createAction(REMOVE, (id) => id);\r\n\r\nlet id = 3;\r\nexport const setResults = createAction(SET_RESULTS, (name, color) => ({\r\n  id: id++,\r\n  name: name,\r\n  checked: false,\r\n  color: color,\r\n}));\r\n\r\nconst initialState = {\r\n  item: '',\r\n  color: 'black',\r\n  results: [\r\n    {\r\n      id: 1,\r\n      name: '앱 만들기',\r\n      color: 'black',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: '영양제 챙겨먹기',\r\n      color: 'black',\r\n    },\r\n  ],\r\n};\r\n\r\nconst add = handleActions(\r\n  {\r\n    [SET_RESULTS]: (state, { payload: result }) => ({\r\n      ...state,\r\n      results: state.results.concat(result),\r\n    }),\r\n    [CHANGE_COLOR]: (state, action) => ({\r\n      ...state,\r\n      color: action.payload,\r\n    }),\r\n    [REMOVE]: (state, { payload: id }) => ({\r\n      ...state,\r\n      results: state.results.filter((result) => result.id !== id),\r\n    }),\r\n    [CHANGE_ITEM]: (state, action) => ({\r\n      ...state,\r\n      item: action.payload,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default add;\r\n","import React from 'react';\r\nimport CalendarViewer from '../../components/calendar/CalendarViewer';\r\nimport { setSelectedDay } from '../../modules/calendar';\r\nimport { toggle } from '../../modules/add';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CalendarContainer = ({\r\n  toggle,\r\n  results,\r\n  selectedDay,\r\n  setSelectedDay,\r\n}) => {\r\n  return (\r\n    <>\r\n      <CalendarViewer\r\n        toggle={toggle}\r\n        results={results}\r\n        setSelectedDay={setSelectedDay}\r\n        selectedDay={selectedDay}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({ calendar, add }) => ({\r\n    selectedDay: calendar.selectedDay,\r\n    toggle: calendar.toggle,\r\n    results: add.results,\r\n  }),\r\n  {\r\n    setSelectedDay,\r\n    toggle,\r\n  },\r\n)(CalendarContainer);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = ({ username }) => {\r\n  return (\r\n    <>\r\n      <HeaderBlock>\r\n        <Link to=\"/\" className=\"logo\">\r\n          GOAL_TRACKER\r\n        </Link>\r\n        <div className=\"right\">\r\n          <UserInfo>{username ? username : 'undefined'}</UserInfo>\r\n        </div>\r\n      </HeaderBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n\r\nconst UserInfo = styled.div`\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  font-weight: 500;\r\n  margin-right: 1rem;\r\n`;\r\n\r\nconst HeaderBlock = styled.div`\r\n  width: cal(100% - 10px);\r\n  max-width: 800px;\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  .logo {\r\n    font-size: 1.2rem;\r\n    font-weight: 800;\r\n    letter-spacing: 2px;\r\n  }\r\n  .right {\r\n    display: flex;\r\n    align-items: center;\r\n    user-select: none;\r\n  }\r\n`;\r\n","import { createAction, handleActions } from 'redux-actions';\r\n\r\nconst SET_USER = 'user/SET_USER';\r\n\r\nexport const setUser = createAction(SET_USER, username => username);\r\n\r\nconst initialState = {\r\n  username: '',\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [SET_USER]: (state, action) => ({\r\n      ...state,\r\n      username: action.payload,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n","import React from 'react';\r\nimport Header from '../../components/common/Header';\r\nimport { setUser } from '../../modules/user';\r\nimport { connect } from 'react-redux';\r\n\r\nconst HeaderContainer = ({ username, setUser }) => {\r\n  const loadUser = () => {\r\n    try {\r\n      const currentUser = localStorage.getItem('username');\r\n      if (currentUser === null) {\r\n        return undefined;\r\n      }\r\n      const result = JSON.parse(currentUser);\r\n      setUser(result);\r\n    } catch (e) {\r\n      return undefined;\r\n    }\r\n  };\r\n  loadUser();\r\n  return <Header username={username} />;\r\n};\r\n\r\nexport default connect(\r\n  ({ user }) => ({\r\n    username: user.username,\r\n  }),\r\n  {\r\n    setUser,\r\n  },\r\n)(HeaderContainer);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { TiDocumentAdd } from 'react-icons/ti';\r\nimport { MdChevronLeft, MdChevronRight } from 'react-icons/md';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaCalendarCheck } from 'react-icons/fa';\r\n\r\nconst SubHeader = ({ type, setSelectedDay, selectedDay }) => {\r\n  return (\r\n    <SubHeaderBlock>\r\n      {type === 'calendar' ? (\r\n        <div className=\"header\">\r\n          <span className=\"title\">How Was Your Day ?</span>\r\n          <Link to=\"/add\">\r\n            <button className=\"toAdd\">\r\n              <TiDocumentAdd />\r\n              <span className=\"tooltiptext\">Add 페이지로 이동하기</span>\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      ) : (\r\n        <div className=\"header\">\r\n          <span className=\"title\">Add Your Monthly Goal !</span>\r\n          <Link to=\"/calendar\">\r\n            <button className=\"toCal\">\r\n              <FaCalendarCheck />\r\n              <span className=\"tooltiptext\">Calendar 페이지로 이동하기</span>\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </SubHeaderBlock>\r\n  );\r\n};\r\n\r\nconst SubHeaderBlock = styled.div`\r\n  user-select: none;\r\n  margin: 5%;\r\n  .header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  button {\r\n    cursor: pointer;\r\n    outline: none;\r\n    border: none;\r\n    font-size: 15px;\r\n    border-radius: 4px;\r\n    padding: 4px 9px;\r\n    margin: 0 3px;\r\n    display: inline-flex;\r\n    &.toAdd:hover .tooltiptext {\r\n      visibility: visible;\r\n    }\r\n    &.toCal:hover .tooltiptext {\r\n      visibility: visible;\r\n    }\r\n  }\r\n\r\n  .toAdd,\r\n  .toCal {\r\n    background: transparent;\r\n    position: relative;\r\n    display: inline-block;\r\n    .tooltiptext {\r\n      font-size: 10px;\r\n      visibility: hidden;\r\n      width: 140px;\r\n      background-color: black;\r\n      color: #fff;\r\n      text-align: center;\r\n      border-radius: 6px;\r\n      padding: 5px 0;\r\n\r\n      position: absolute;\r\n      z-index: 1;\r\n      top: 90%;\r\n      left: 50%;\r\n      margin-left: -60px;\r\n    }\r\n  }\r\n  .toAdd {\r\n    font-size: 18px;\r\n  }\r\n  .toCal {\r\n    font-size: 15px;\r\n  }\r\n\r\n  span.title {\r\n    padding: 4px;\r\n    font-size: 1.1rem;\r\n    font-weight: 540;\r\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  }\r\n`;\r\n\r\nexport default SubHeader;\r\n","import React from 'react';\r\nimport HeaderContainer from '../common/HeaderContainer';\r\nimport SubHeader from '../../components/common/SubHeader';\r\nimport { setSelectedDay } from '../../modules/calendar';\r\nimport { connect } from 'react-redux';\r\n\r\nconst CalendarHeaderContainer = ({\r\n  toggle,\r\n  results,\r\n  selectedDay,\r\n  setSelectedDay,\r\n}) => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <SubHeader\r\n        type=\"calendar\"\r\n        setSelectedDay={setSelectedDay}\r\n        selectedDay={selectedDay}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({ calendar }) => ({\r\n    selectedDay: calendar.selectedDay,\r\n  }),\r\n  {\r\n    setSelectedDay,\r\n  },\r\n)(CalendarHeaderContainer);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { IoMdFlower } from 'react-icons/io';\r\n\r\nconst Today = () => {\r\n  return (\r\n    <TodayBlock>\r\n      <div className=\"header\">\r\n        <div className=\"icon\" style={{ color: '#ffa8a8' }}>\r\n          <IoMdFlower />\r\n        </div>\r\n        <label className=\"label\">오늘을 정리해 보세요</label>\r\n      </div>\r\n      <textarea className=\"story\" rows=\"3\" cols=\"35\"></textarea>\r\n    </TodayBlock>\r\n  );\r\n};\r\n\r\nexport default Today;\r\n\r\nconst TodayBlock = styled.div`\r\n  margin: 10px;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  .header {\r\n    display: flex;\r\n    .icon {\r\n      font-size: 20px;\r\n      padding-right: 4px;\r\n    }\r\n    .label {\r\n      font-size: 15px;\r\n      display: block;\r\n      margin-bottom: 11px;\r\n      font-weight: 570;\r\n      letter-spacing: 0.1px;\r\n      font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n      font-family: 10px;\r\n    }\r\n  }\r\n\r\n  .story {\r\n    outline: none;\r\n    padding: 10px;\r\n    line-height: 1.5;\r\n    border-radius: 5px;\r\n    border: 1px solid #ccc;\r\n    box-shadow: 1px 1px 2px lightgray;\r\n    letter-spacing: 0.15px;\r\n    font-size: 11px;\r\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport Today from '../../components/calendar/Today';\r\n\r\nconst TodayContainer = () => {\r\n  return <Today />;\r\n};\r\n\r\nexport default TodayContainer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { MdRemoveCircleOutline } from 'react-icons/md';\r\nimport { IoIosList } from 'react-icons/io';\r\n\r\nconst AddList = ({\r\n  color,\r\n  lists,\r\n  type,\r\n  results,\r\n  toggle,\r\n  remove,\r\n  selectedDay,\r\n}) => {\r\n  return (\r\n    <AddListBlock>\r\n      <div className=\"header\">\r\n        <div className=\"icon2\">\r\n          <IoIosList />\r\n        </div>\r\n        <p className=\"title\">My Goal</p>\r\n      </div>\r\n      <div className=\"goal\">\r\n        <div className=\"goal-contents\">\r\n          {results.map((result) => (\r\n            <li\r\n              id={result.id}\r\n              className=\"goal-goal\"\r\n              style={{ color: result.color }}\r\n            >\r\n              {result.name}\r\n            </li>\r\n          ))}\r\n        </div>\r\n        <div className=\"goal-remove\">\r\n          {results.map((result) => (\r\n            <div>\r\n              {type === 'add' ? (\r\n                <div\r\n                  className=\"remove\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  onClick={() => remove(result.id)}\r\n                >\r\n                  <MdRemoveCircleOutline />\r\n                </div>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </AddListBlock>\r\n  );\r\n};\r\n\r\nexport default AddList;\r\n\r\nconst AddListItem = ({ list, a, toggle, remove, type, selectedDay }) => {\r\n  return (\r\n    <AddListItemBlock>\r\n      <div className={type === 'add' ? 'add' : 'calendar'}></div>\r\n    </AddListItemBlock>\r\n  );\r\n};\r\n\r\nconst AddListBlock = styled.div`\r\n  .header {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    margin-left: 30px;\r\n    padding: 0;\r\n    .title {\r\n      font-size: 1.05rem;\r\n      text-align: center;\r\n      font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n    }\r\n    .icon2 {\r\n      font-size: 25px;\r\n      margin-right: 4px;\r\n      margin-top: 5px;\r\n    }\r\n  }\r\n  .goal {\r\n    border: 1px lightgray solid;\r\n    border-radius: 10px;\r\n    padding: 13px 18px 17px;\r\n    list-style-type: none;\r\n    width: 80%;\r\n    display: flex;\r\n    justify-content: center;\r\n    line-height: 1.7rem;\r\n    .goal-contents {\r\n      width: 80%;\r\n      margin: 0;\r\n      .goal-goal {\r\n        border-bottom: 1.5px solid lightgray;\r\n        margin-bottom: 3.5px;\r\n        height: 28px;\r\n        font-size: 15px;\r\n      }\r\n    }\r\n    .goal-remove {\r\n      width: 10%;\r\n      margin: 0;\r\n      .remove {\r\n        height: 28px;\r\n        margin-bottom: 5px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .lineThrough {\r\n    text-decoration: line-through #495057;\r\n  }\r\n  .goal-goal {\r\n  }\r\n  background-color: #e9ecef;\r\n  padding: 5px 20px 20px;\r\n  margin: 0rem 2.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n\r\n  .result {\r\n    padding: 15px;\r\n    border: 1.5px solid lightgray;\r\n    width: 90%;\r\n    max-width: 250px;\r\n    margin: 0rem 1.2rem 0.8rem;\r\n    min-height: 150px;\r\n    text-align: center;\r\n    border-radius: 15px;\r\n  }\r\n`;\r\n\r\nconst AddListItemBlock = styled.div`\r\n  padding: 3px;\r\n  display: flex;\r\n  .add {\r\n    padding-left: 10px;\r\n    list-style-type: none;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 120px;\r\n    font-size: 15px;\r\n    margin: 3px 0px;\r\n    border-bottom: 1px solid lightgray;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport AddList from '../../components/add/AddList';\r\nimport { remove, toggle } from '../../modules/add';\r\nimport { connect } from 'react-redux';\r\n\r\nconst AddListContainer = ({\r\n  color,\r\n  type,\r\n  results,\r\n  remove,\r\n  toggle,\r\n  selectedDay,\r\n  lists,\r\n}) => {\r\n  return (\r\n    <>\r\n      <AddList\r\n        selectedDay={selectedDay}\r\n        results={results}\r\n        remove={remove}\r\n        toggle={toggle}\r\n        type={type}\r\n        color={color}\r\n        lists={lists}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({ add, calendar }) => ({\r\n    results: add.results,\r\n    color: add.color,\r\n    lists: add.lists,\r\n    selectedDay: calendar.selectedDay,\r\n  }),\r\n  {\r\n    remove,\r\n    toggle,\r\n  },\r\n)(AddListContainer);\r\n","import React from 'react';\r\nimport CalendarContainer from '../containers/calendar/CalendarContainer';\r\nimport CalendarHeaderContainer from '../containers/calendar/CalendarHeaderContainer';\r\nimport TodayContainer from '../containers/calendar/TodayContainer';\r\nimport AddListContainer from '../containers/add/AddListContainer';\r\n\r\nconst CalendarPage = () => {\r\n  return (\r\n    <>\r\n      <CalendarHeaderContainer />\r\n      <AddListContainer type=\"calendar\" />\r\n      <CalendarContainer />\r\n      <TodayContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CalendarPage;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\n\r\nconst StyledButton = styled.button`\r\n  border: none;\r\n  border-radius: 15px;\r\n  font-size: 1rem;\r\n  padding: 0.3rem 1rem;\r\n  font-weight: 700;\r\n  outline: none;\r\n  color: white;\r\n  background: ${palette.green[5]};\r\n  &:hover {\r\n    background: ${palette.green[7]};\r\n  }\r\n  cursor: pointer;\r\n\r\n  ${props =>\r\n    props.wider &&\r\n    css`\r\n      padding: 0.7rem 3rem;\r\n      color: white;\r\n      background: ${palette.green[8]};\r\n      &:hover {\r\n        background: ${palette.green[6]};\r\n      }\r\n      border-radius: 15px;\r\n      font-size: 20px;\r\n      margin-top: 15px;\r\n    `}\r\n`;\r\n\r\nconst Button = props => <StyledButton {...props} />;\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledInput = styled.input`\r\n  margin: 0px 20px 0px 30px;\r\n  width: 60%;\r\n  outline: none;\r\n  border-left-width: 0;\r\n  border-right-width: 0;\r\n  border-top-width: 0;\r\n  border-bottom-width: 1;\r\n  text-align: center;\r\n  border-color: gray;\r\n  background: transparent;\r\n  ::placeholder {\r\n    color: gray;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst Input = (props) => <StyledInput {...props} />;\r\nexport default Input;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport Button from '../common/Button';\r\nimport Input from '../common/Input';\r\n\r\nconst AddViewer = ({ item, color, changeColor, changeItem, setResults }) => {\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    changeItem('');\r\n\r\n    setResults(item, color);\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    changeItem(e.target.value);\r\n  };\r\n  const onClick = (e) => {\r\n    changeColor(e.target.style.background);\r\n  };\r\n\r\n  return (\r\n    <AddViewerBlock>\r\n      <form className=\"container\" spellCheck=\"false\" onSubmit={onSubmit}>\r\n        <Input\r\n          value={item}\r\n          onChange={onChange}\r\n          placeholder=\"이달의 목표를 입력하세요!\"\r\n          type=\"text\"\r\n          style={{ color: color }}\r\n        />\r\n        <Button type=\"submit\">ADD</Button>\r\n      </form>\r\n\r\n      <div className=\"color-select\">\r\n        <div\r\n          className=\"color one\"\r\n          style={{ background: '#fa5252' }}\r\n          onClick={onClick}\r\n        ></div>\r\n        <div\r\n          className=\"color two\"\r\n          style={{ background: '#fab005' }}\r\n          onClick={onClick}\r\n        ></div>\r\n        <div\r\n          className=\"color three\"\r\n          style={{ background: '#20c997' }}\r\n          onClick={onClick}\r\n        ></div>\r\n        <div\r\n          className=\"color four\"\r\n          style={{ background: '#4dabf7' }}\r\n          onClick={onClick}\r\n        ></div>\r\n        <div\r\n          className=\"color five\"\r\n          style={{ background: 'black' }}\r\n          onClick={onClick}\r\n        ></div>\r\n      </div>\r\n    </AddViewerBlock>\r\n  );\r\n};\r\n\r\nexport default AddViewer;\r\n\r\nconst AddViewerBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #e9ecef;\r\n  padding: 5px 20px 0px;\r\n  margin: 0rem 2.5rem;\r\n  align-items: center;\r\n  .color-select {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    margin-right: 3.2rem;\r\n    margin-bottom: 9px;\r\n    border-radius: 20px;\r\n    width: 45%;\r\n    height: 30px;\r\n    text-align: center;\r\n    .color {\r\n      width: 15px;\r\n      height: 15px;\r\n      border-radius: 100%;\r\n      box-shadow: 20px;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .container {\r\n    display: flex;\r\n    padding: 5px;\r\n    margin: 1.5rem 0 0rem;\r\n    width: 90%;\r\n    min-width: 310px;\r\n    max-width: 550px;\r\n    height: 30px;\r\n    align-items: center;\r\n    justify-content: center;\r\n    .icon {\r\n      color: ${palette.green[5]};\r\n      font-size: 28px;\r\n      margin: 10px;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport AddViewer from '../../components/add/AddViewer';\r\nimport HeaderContainer from '../common/HeaderContainer';\r\nimport SubHeader from '../../components/common/SubHeader';\r\nimport { changeColor, changeItem, setResults } from '../../modules/add';\r\nimport { connect } from 'react-redux';\r\n\r\nconst AddViewerContainer = ({\r\n  item,\r\n  color,\r\n  setResults,\r\n  changeColor,\r\n  changeItem,\r\n}) => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <SubHeader type=\"editor\" />\r\n      <AddViewer\r\n        item={item}\r\n        color={color}\r\n        changeColor={changeColor}\r\n        changeItem={changeItem}\r\n        setResults={setResults}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({ add }) => ({\r\n    item: add.item,\r\n    color: add.color,\r\n  }),\r\n  {\r\n    changeColor,\r\n    changeItem,\r\n    setResults,\r\n  },\r\n)(AddViewerContainer);\r\n","import React from 'react';\r\nimport AddViewerContainer from '../containers/add/AddViewerContainer';\r\nimport AddListContainer from '../containers/add/AddListContainer';\r\n\r\nconst AddPage = () => {\r\n  return (\r\n    <>\r\n      <AddViewerContainer />\r\n      <AddListContainer type=\"add\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddPage;\r\n","import React from 'react';\r\nimport Button from '../../components/common/Button';\r\nimport styled from 'styled-components';\r\nimport img from '../../imgs/1.jpg';\r\nimport palette from '../../lib/styles/palette';\r\n\r\nconst StartViewer = ({ username, setUser }) => {\r\n  const onChange = (e) => {\r\n    setUser(e.target.value);\r\n  };\r\n\r\n  const saveUser = (username) => {\r\n    try {\r\n      const currentUser = JSON.stringify(username);\r\n      localStorage.setItem('username', currentUser);\r\n    } catch (e) {\r\n      return undefined;\r\n    }\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    alert('입력하신 이름이 ' + username + ' 인가요?');\r\n    saveUser(username);\r\n    window.location = '/calendar';\r\n  };\r\n\r\n  return (\r\n    <StartViewerBlock>\r\n      <div className=\"bg\"></div>\r\n      <p>GET STARTED</p>\r\n      <div className=\"greeting\">For Your Goal</div>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"askName 1\" type=\"submit\">\r\n          <input\r\n            onChange={onChange}\r\n            className=\"underline\"\r\n            placeholder=\"What's your name?\"\r\n          />\r\n        </div>\r\n        <div className=\"askName 2\">\r\n          <Button wider>Welcome!</Button>\r\n        </div>\r\n      </form>\r\n    </StartViewerBlock>\r\n  );\r\n};\r\n\r\nexport default StartViewer;\r\n\r\nconst StartViewerBlock = styled.div`\r\n  background-image: url(${img});\r\n  background-size: cover;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  z-index: 0;\r\n\r\n  .bg {\r\n    background-color: rgba(0, 0, 0, 0.3);\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    z-index: -10;\r\n  }\r\n  p {\r\n    color: #f1f3f5;\r\n    font-weight: 650;\r\n    font-size: 5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-bottom: 0;\r\n    margin-top: 15%;\r\n  }\r\n  .greeting {\r\n    color: ${palette.green[5]};\r\n    font-weight: 500;\r\n    font-size: 2rem;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  .askName {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  input {\r\n    margin-top: 40px;\r\n    outline: none;\r\n    text-align: center;\r\n    color: white;\r\n    background: rgba(0, 0, 0, 0);\r\n    border-color: white;\r\n    font-size: 20px;\r\n    border-left-width: 0;\r\n    border-right-width: 0;\r\n    border-top-width: 0;\r\n    border-bottom-width: 1;\r\n    ::placeholder {\r\n      color: white;\r\n      text-align: center;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport StartViewer from '../../components/start/StartViewer';\r\nimport { setUser } from '../../modules/user';\r\nimport { connect } from 'react-redux';\r\n\r\nconst StartContainer = ({ username, setUser }) => {\r\n  return <StartViewer setUser={setUser} username={username} />;\r\n};\r\n\r\nexport default connect(\r\n  ({ user }) => ({\r\n    username: user.username,\r\n  }),\r\n  {\r\n    setUser,\r\n  },\r\n)(StartContainer);\r\n","import React from 'react';\r\nimport StartContainer from '../containers/start/StartContainer';\r\n\r\nconst StartPage = () => {\r\n  return <StartContainer />;\r\n};\r\n\r\nexport default StartPage;\r\n","import React from 'react';\nimport { Route, HashRouter, Switch } from 'react-router-dom';\nimport CalendarPage from './pages/CalendarPage';\nimport AddPage from './pages/AddPage';\nimport StartPage from './pages/StartPage';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Route component={StartPage} path=\"/\" exact={true} />\n      <Route component={CalendarPage} path=\"/calendar\" />\n      <Route component={AddPage} path=\"/add\" />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport user from './user';\r\nimport calendar from './calendar';\r\nimport add from './add';\r\n\r\nconst rootReducer = combineReducers({\r\n  calendar,\r\n  user,\r\n  add,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter, BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './modules';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}